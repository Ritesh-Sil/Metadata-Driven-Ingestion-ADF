{
	"name": "pl_s3_azr_integration",
	"properties": {
		"description": "It will ingest the data from S3 bucket into Azure Storage.",
		"activities": [
			{
				"name": "s3-to-azure-blob",
				"description": "Copies the customer data from S3 to Azure blob storage",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AmazonS3ReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "s3_customer_json",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@concat(formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(addDays(utcnow(),-1),'dd'))",
								"type": "Expression"
							},
							"fileName": "Customer_Valid.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Json1",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@concat('Customer_',formatDateTime(adddays(utcnow(),-1),'yyyyMMdd'))",
								"type": "Expression"
							},
							"fileName": "Customer.json"
						}
					}
				]
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "s3-to-azure-blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_src_json_store",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v4",
					"value": {
						"value": "@activity('Get Metadata1').output.exists",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('v4')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "s3-to-azure-blob_copy1",
							"description": "Copies the customer data from S3 to Azure blob storage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AmazonS3ReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "s3_customer_json",
									"type": "DatasetReference",
									"parameters": {
										"filePath": {
											"value": "@concat(formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(addDays(utcnow(),-1),'dd'))",
											"type": "Expression"
										},
										"fileName": "Customer_Valid.json"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json1",
									"type": "DatasetReference",
									"parameters": {
										"filePath": {
											"value": "@concat('Customer_',formatDateTime(adddays(utcnow(),-1),'yyyyMMdd'))",
											"type": "Expression"
										},
										"fileName": "Customer.json"
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Var1": {
				"type": "String"
			},
			"var2": {
				"type": "String"
			},
			"var3": {
				"type": "String"
			},
			"v4": {
				"type": "Boolean"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-04-28T12:49:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}